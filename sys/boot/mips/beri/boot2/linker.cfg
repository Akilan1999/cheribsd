/*-
 * Copyright (c) 2011-2014 Robert N. M. Watson
 * All rights reserved.
 *
 * This software was developed by SRI International and the University of
 * Cambridge Computer Laboratory under DARPA/AFRL contract (FA8750-10-C-0237)
 * ("CTSRD"), as part of the DARPA CRASH research programme.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * MIPS segment definitions.
 */
__mips_ckseg_cached__ = 0xffffffff80000000;	/* BSD kernel here. */
__mips64_xkphys_cached__ = 0x9800000000000000;	/* Device memory here. */

/*
 * Location of boot2 in flash.
 */
__cheri_flash_base__ = 0x74000000;
__cheri_flash_boot_loader_base_ = 0x03fe0000;
__cheri_flash_boot_loader_vaddr__ = __mips64_xkphys_cached__ +
    __cheri_flash_base__ + __cheri_flash_boot_loader_base_;

/*
 * Location of boot file system in flash.
 */
__cheri_flash_bootfs_base__ = 0x2000000;
__cheri_flash_bootfs_len__ = 0x2000000;
__cheri_flash_bootfs_vaddr__ = __mips64_xkphys_cached__ +
    __cheri_flash_base__ + __cheri_flash_bootfs_base__;

/*
 * Location where boot2 will self-relocate to as its first step.
 */
__boot2_base__ = 0x4000;
__boot2_base_vaddr__ = __mips64_xkphys_cached__ + __boot2_base__;

OUTPUT_FORMAT("elf64-tradbigmips");
OUTPUT_ARCH(mips)
ENTRY(start)
SECTIONS
{
	/*
	 * Before entering linked C, boot2 will self-relocate from Intel
	 * StrataFlash into DRAM reached via MIPS ckseg0.  We depend on the
	 * firmware having set up a stack for us.
	 */
	. = __boot2_base_vaddr__;

	.text ALIGN(0x8): {
		start.o(.text)
		*(EXCLUDE_FILE (start.o) .text)
	}
	.bss ALIGN(0x8): { *(.bss) }
	.data ALIGN(0x8): { *(.data)}

	__heap = ALIGN(0x8);	/* 64-bit aligned heap pointer */
	__data_end = .;
	__boot_loader_len__ = . - __boot2_base_vaddr__;
	__bss_start = ADDR(.bss);
	__bss_end = ALIGN(__bss_start + SIZEOF(.bss), 0x8);
}
